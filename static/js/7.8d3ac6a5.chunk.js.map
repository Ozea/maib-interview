{"version":3,"sources":["utils/axios.js","components/SupportTable/SupportTable.jsx","containers/Support/Support.jsx"],"names":["instance","axios","create","useStyles","makeStyles","theme","spinner","margin","spacing","SupportTable","loading","data","classes","useState","rows","setRows","useEffect","TableContainer","component","Paper","className","paper","CircularProgress","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","firstName","lastName","idnp","phoneNumber","panCard","dayjs","lastTransaction","format","id","length","colSpan","align","root","padding","background","palette","primary","light","fontWeight","marginOffset","marginBottom","label","color","sticky","position","top","boxShadow","datePicker","button","width","height","borderRadius","Support","setLoading","setData","filteredData","setFilteredData","searchFilters","setSearchFilters","get","then","result","items","catch","isSameDay","d1","d2","first","Date","second","getFullYear","getMonth","getDate","onChangeSearchFilter","input","value","Grid","container","item","xs","elevation","square","Typography","variant","clsx","TextField","onChange","event","target","InputLabelProps","shrink","utils","DateFnsUtils","justify","disableToolbar","date","KeyboardButtonProps","Button","onClick","duplicatedData","filtered","filter","includes","setTimeout","style","marginLeft"],"mappings":"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","file":"static/js/7.8d3ac6a5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create();\n\nexport default instance;","import { CircularProgress, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport dayjs from 'dayjs';\nimport React, { useEffect, useState } from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  spinner: {\n    margin: theme.spacing(2, 4, 1)\n  }\n}));\n\nexport default function SupportTable({ loading, data = [], ...props }) {\n  const classes = useStyles();\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    setRows(data);\n  }, [data]);\n\n  return (\n    <TableContainer component={Paper} className={classes.paper}>\n      {\n        loading\n          ? <CircularProgress className={classes.spinner} />\n          : (\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell><b>Nume Prenume</b></TableCell>\n                  <TableCell><b>IDNP</b></TableCell>\n                  <TableCell><b>Nr. Telefon</b></TableCell>\n                  <TableCell><b>PAN Card</b></TableCell>\n                  <TableCell><b>Last transaction</b></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  !loading\n                    ? rows.map((row) => (\n                      <TableRow key={row.id}>\n                        <TableCell>{row.firstName} {row.lastName}</TableCell>\n                        <TableCell>{row.idnp}</TableCell>\n                        <TableCell>{row.phoneNumber}</TableCell>\n                        <TableCell>{row.panCard}</TableCell>\n                        <TableCell>{dayjs(row.lastTransaction).format('HH:mm DD/MM/YYYY')}</TableCell>\n                      </TableRow>\n                    ))\n                    : null\n                }\n\n                {!rows.length && (\n                  <TableRow>\n                    <TableCell colSpan=\"5\" align=\"center\">Sorry, no data found</TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          )\n      }\n    </TableContainer>\n  );\n}","import DateFnsUtils from '@date-io/date-fns';\nimport { Button, Grid, makeStyles, Paper, TextField, Typography } from '@material-ui/core';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport SupportTable from '../../components/SupportTable/SupportTable';\nimport React, { useEffect, useState } from 'react';\nimport instance from '../../utils/axios';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 5, 3)\n  },\n  paper: {\n    background: theme.palette.primary.light,\n    padding: theme.spacing(2, 5),\n    '& h5': {\n      fontWeight: 'bolder'\n    }\n  },\n  marginOffset: {\n    marginBottom: theme.spacing(2)\n  },\n  label: {\n    '& label': {\n      color: theme.palette.primary.light\n    }\n  },\n  sticky: {\n    padding: theme.spacing(1, 5, 2),\n    position: 'sticky',\n    top: '64px',\n    background: '#fafafa',\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)'\n  },\n  datePicker: {\n    margin: 0,\n    '& label': {\n      color: theme.palette.primary.light\n    }\n  },\n  button: {\n    width: '100%',\n    height: '100%',\n    margin: theme.spacing(0, 3),\n    borderRadius: 0,\n    fontWeight: 'bolder'\n  }\n}));\n\nexport default function Support() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchFilters, setSearchFilters] = useState({\n    idnp: '',\n    phoneNumber: '',\n    lastTransaction: ''\n  });\n\n  useEffect(() => {\n    setLoading(true);\n\n    instance.get('/api/support')\n      .then(result => {\n        setData(result.data.items);\n        setFilteredData(result.data.items);\n        setLoading(false);\n      })\n      .catch();\n  }, []);\n\n  const onSearch = () => {\n    const duplicatedData = [...data];\n    const { idnp, phoneNumber, lastTransaction } = searchFilters;\n    const filtered = duplicatedData.filter(item =>\n      (item.idnp.includes(idnp) && item.phoneNumber.includes(phoneNumber) && isSameDay(item.lastTransaction, lastTransaction)));\n\n    setLoading(true);\n    setTimeout(() => {\n      setFilteredData(filtered);\n      setLoading(false);\n    }, 1500);\n  }\n\n  const isSameDay = (d1, d2) => {\n    if (!d1 || !d2) {\n      return true;\n    }\n\n    let first = new Date(d1);\n    let second = new Date(d2);\n\n    return first.getFullYear() === second.getFullYear() &&\n      first.getMonth() === second.getMonth() &&\n      first.getDate() === second.getDate();\n  }\n\n  const onChangeSearchFilter = (input, value) => {\n    setSearchFilters({ ...searchFilters, [input]: value })\n  }\n\n  const onResetFilters = () => {\n    setLoading(true);\n    setSearchFilters({\n      ...searchFilters,\n      idnp: '',\n      phoneNumber: '',\n      lastTransaction: ''\n    });\n\n    setTimeout(() => {\n      setFilteredData(data);\n      setLoading(false);\n    }, 1000);\n  }\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Paper className={classes.paper} elevation={0} square>\n          <Typography variant=\"h5\">Support</Typography>\n        </Paper>\n      </Grid>\n\n      <Grid container className={clsx(classes.root, classes.sticky)}>\n        <Grid item xs={12} className={classes.marginOffset}>\n          <Typography variant=\"h6\">Cauta utilizator:</Typography>\n        </Grid>\n\n        <Grid item xs={2}>\n          <TextField\n            className={classes.label}\n            label=\"IDNP\"\n            value={searchFilters.idnp}\n            onChange={event => onChangeSearchFilter('idnp', event.target.value)}\n            InputLabelProps={{\n              shrink: true,\n            }} />\n        </Grid>\n\n        <Grid item xs={2}>\n          <TextField\n            className={classes.label}\n            label=\"Nr. telefon\"\n            value={searchFilters.phoneNumber}\n            onChange={event => onChangeSearchFilter('phoneNumber', event.target.value)}\n            InputLabelProps={{\n              shrink: true\n            }} />\n        </Grid>\n\n        <Grid item xs={2}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                className={classes.datePicker}\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Data access\"\n                value={searchFilters.lastTransaction || null}\n                onChange={date => onChangeSearchFilter('lastTransaction', date)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </Grid>\n\n        <Grid item xs={2}>\n          <Button variant=\"contained\" onClick={onSearch} color=\"secondary\" className={classes.button}>CAUTA</Button>\n        </Grid>\n\n        <Grid item xs={2} style={{ marginLeft: '10px' }}>\n          <Button variant=\"outlined\" onClick={onResetFilters} color=\"secondary\" className={classes.button}>RESET FILTERS</Button>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.root}>\n        <Grid item xs={11}>\n          <SupportTable data={filteredData} loading={loading} />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}"],"sourceRoot":""}