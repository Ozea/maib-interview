{"version":3,"sources":["utils/axios.js","components/DateRangePicker/DateRangePickerOverride.jsx","components/DashboardTable/DashboardTable.jsx","components/Chart/CustomChart.jsx","containers/Dashboard/Dashboard.jsx"],"names":["instance","axios","create","useStyles","makeStyles","theme","dateRangePicker","boxShadow","width","marginTop","spacing","backgroundColor","padding","border","marginRight","color","label","fontSize","currentDate","Date","currentDatePlusOneMonth","dayjs","add","toDate","DateRangePickerOverride","onChangeDates","dates","daysBetweenDates","useState","value","setValue","classes","useEffect","length","className","Typography","onChange","newValue","paper","marginLeft","spinner","margin","DashboardTable","data","loading","rows","setRows","items","TableContainer","component","Paper","CircularProgress","Table","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","date","format","newUsers","otherData","id","chart","fill","palette","primary","light","titleWrapper","display","justifyContent","alignItems","common","black","firstSpan","fontWeight","secondSpan","CustomChart","chartData","startDate","endDate","props","setChartData","rootComponent","Root","factory","scalePoint","name","valueField","argumentField","background","tabsPaper","paddingLeft","white","offset","fullWidth","installationsOffset","centered","leftButton","textTransform","borderRadius","installationsPaper","installations","indicator","Dashboard","tabValue","tableData","cardInfo","state","setState","setDates","daysBetweenSelectedDates","setDaysBetweenSelectedDates","timer","setTimer","setLoading","calculateDaysBetween","fetchData","interval","setInterval","clearInterval","firstDate","secondDate","days","Math","round","Promise","all","get","toISOString","then","result","catch","err","console","error","Grid","container","item","xs","elevation","square","variant","Tabs","event","Tab","Button","clsx","monthlyInstallation","prevMonthComparison"],"mappings":"yHAAA,cAEMA,EAFN,OAEiBC,EAAMC,SAERF,O,iPCCTG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,gBAAiB,CACfC,UAAW,qGACXC,MAAO,QACPC,UAAWJ,EAAMK,QAAQ,KACzB,UAAW,CACTC,gBAAiB,YACjBC,QAASP,EAAMK,QAAQ,EAAG,GAC1BF,MAAO,OACP,UAAW,CACTK,OAAQ,OACR,WAAY,CACVC,YAAaT,EAAMK,QAAQ,IAE7B,UAAW,CACTK,MAAO,WAET,SAAU,CACRA,MAAO,cAKfC,MAAO,CACLL,gBAAiB,YACjBC,QAASP,EAAMK,QAAQ,IAAK,EAAG,GAC/BO,SAAU,OACVF,MAAO,eAILG,EAAc,IAAIC,KAClBC,EAA0BC,IAAMH,GAAaI,IAAI,EAAG,SAASC,SAEpD,SAASC,EAAT,GAAiI,IAA9FC,EAA6F,EAA7FA,cAA6F,IAA9EC,aAA8E,MAAtE,CAACR,EAAaE,GAAwD,EAA9BO,EAA8B,EAA9BA,iBAA8B,+DACnHC,mBAAS,KAD0G,mBACtIC,EADsI,KAC/HC,EAD+H,KAEvIC,EAAU5B,IAEhB6B,qBAAU,WACJN,EAAMO,QACRH,EAASJ,KAEV,CAACA,IAOJ,OACE,+BACE,sBAAKQ,UAAWH,EAAQzB,gBAAxB,UACE,eAAC6B,EAAA,EAAD,CAAYD,UAAWH,EAAQf,MAA/B,kBAA4CW,GAAoB,EAAhE,WACA,cAAC,IAAD,CACES,SAVS,SAAAC,GACfP,EAASO,GACTZ,EAAcY,IASRR,MAAOA,S,gECxDX1B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiC,MAAO,CACLC,WAAYlC,EAAMK,QAAQ,MAC1BE,QAASP,EAAMK,QAAQ,EAAG,IAE5B8B,QAAS,CACPC,OAAQpC,EAAMK,QAAQ,EAAG,EAAG,QAIjB,SAASgC,EAAT,GAA6D,IAAnCC,EAAkC,EAAlCA,KAAkC,IAA5BC,eAA4B,8CACjDhB,mBAAS,KADwC,mBAClEiB,EADkE,KAC5DC,EAD4D,KAEnEf,EAAU5B,IAQhB,OANA6B,qBAAU,WACJW,GACFG,EAAQH,EAAKI,SAEd,CAACJ,IAGF,cAACK,EAAA,EAAD,CAAgBC,UAAWC,IAAOhB,UAAWH,EAAQO,MAArD,SAEIM,EACI,cAACO,EAAA,EAAD,CAAkBjB,UAAWH,EAAQS,UAErC,eAACY,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAW,uCACX,cAACA,EAAA,EAAD,UAAW,6DACX,cAACA,EAAA,EAAD,UAAW,6DACX,cAACA,EAAA,EAAD,UAAW,kDAGf,cAACC,EAAA,EAAD,UAEKb,EASG,KARAC,EAAKa,KAAI,SAACC,GAAD,OACT,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYnC,IAAMsC,EAAIC,MAAMC,OAAO,gBACnC,cAACL,EAAA,EAAD,UAAYG,EAAIG,WAChB,cAACN,EAAA,EAAD,UAAYG,EAAIG,WAChB,cAACN,EAAA,EAAD,UAAYG,EAAII,cAJHJ,EAAIK,c,kCCnCnC7D,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC4D,MAAO,CACLrD,QAASP,EAAMK,QAAQ,EAAG,GAC1B,QAAS,CACP,SAAU,CACRwD,KAAM7D,EAAM8D,QAAQC,QAAQC,OAE9B,SAAU,CACRH,KAAM,UAIZ5B,MAAO,CACLC,WAAYlC,EAAMK,QAAQ,OAE5B4D,aAAc,CACZC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZjE,MAAO,OACP,QAAS,CACPO,MAAOV,EAAM8D,QAAQO,OAAOC,QAGhCnC,QAAS,CACPC,OAAQpC,EAAMK,QAAQ,EAAG,IAE3BkE,UAAW,CACThE,QAASP,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAChCmE,WAAY,SACZ5D,SAAU,WAEZ6D,WAAY,CACVlE,QAASP,EAAMK,QAAQ,EAAG,EAAG,EAAG,GAChCmE,WAAY,SACZ5D,SAAU,YAIC,SAAS8D,EAAT,GAAgK,IAAD,IAAxIC,UAAajC,aAA2H,MAAnH,GAAmH,MAA7GrB,aAA6G,MAArG,CAAEuD,UAAW,IAAI9D,KAAQ+D,QAAS7D,IAAM,IAAIF,MAAQG,IAAI,EAAG,SAASC,UAAiC,EAArBqB,EAAqB,EAArBA,QAAYuC,EAAS,iDAC/IvD,qBAD+I,mBACrKe,EADqK,KAC/JyC,EAD+J,KAEtKrD,EAAU5B,IAEhB6B,qBAAU,WACJe,IAAUH,GACZwC,EAAarC,KAEd,CAACoC,EAAOpC,IAMX,OACE,cAACG,EAAA,EAAD,CAAOhB,UAAWH,EAAQO,MAA1B,UAEKM,GAAWD,EAER,eAAC,IAAD,CACEA,KAAMA,EACN0C,cAXM,SAAC,GAAD,IAAMF,EAAN,2BAChB,cAAC,IAAMG,KAAP,2BAAgBH,GAAhB,IAAuBjD,UAAWH,EAAQkC,UAQlC,UAGE,cAAC,IAAD,CAAesB,QAASC,MACxB,cAAC,IAAD,IACA,cAAC,IAAD,IAEA,cAAC,IAAD,CACEC,KAAK,gBACLC,WAAW,gBACXC,cAAc,SAEhB,cAAC,IAAD,CACEF,KAAK,OACLC,WAAW,OACXC,cAAc,SAEhB,sBAAKzD,UAAWH,EAAQuC,aAAxB,UACE,sBAAMpC,UAAWH,EAAQ6C,UAAzB,kCACA,uBAAM1C,UAAWH,EAAQ+C,WAAzB,UAAsCzD,IAAMK,EAAMuD,WAAWpB,OAAO,UAApE,MAAkFxC,IAAMK,EAAMwD,SAASrB,OAAO,mBAKlH,cAACV,EAAA,EAAD,CAAkBjB,UAAWH,EAAQS,Y,qBCjF3CrC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCiC,MAAO,CACLsD,WAAYvF,EAAM8D,QAAQC,QAAQC,MAClCzD,QAASP,EAAMK,QAAQ,EAAG,GAC1B,OAAQ,CACNmE,WAAY,WAGhBgB,UAAW,CACTD,WAAYvF,EAAM8D,QAAQC,QAAQC,MAClCyB,YAAazF,EAAMK,QAAQ,GAC3B,WAAY,CACVK,MAAOV,EAAM8D,QAAQO,OAAOqB,QAGhCC,OAAQ,CACNvD,OAAQpC,EAAMK,QAAQ,EAAG,EAAG,EAAG,IAEjCuF,UAAW,CACTzF,MAAO,QAET0F,oBAAqB,CACnBJ,YAAazF,EAAMK,QAAQ,MAE7ByF,SAAU,CACR5B,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEd2B,WAAY,CACVC,cAAe,YACfzF,QAASP,EAAMK,QAAQ,IAAK,GAC5B4F,aAAc,GAEhBC,mBAAoB,CAClB3F,QAASP,EAAMK,QAAQ,EAAG,GAC1B,OAAQ,CACNmE,WAAY,WAGhB2B,cAAe,CACbvF,SAAU,OACV,WAAY,CACVA,SAAU,OACV,SAAU,CACRF,MAAO,OACPE,SAAU,UAIhBL,QAAS,CACPA,QAASP,EAAMK,QAAQ,EAAG,IAE5B+F,UAAW,CACT9F,gBAAiB,YAIfO,EAAc,IAAIC,KAClBC,EAA0BC,IAAMH,GAAaI,IAAI,EAAG,SAASC,SAEpD,SAASmF,IAAa,IAAD,EACR9E,mBAAS,CACjC+E,SAAU,EACVC,UAAW,GACXC,SAAU,KAJsB,mBAC3BC,EAD2B,KACpBC,EADoB,OAMRnF,mBAAS,CACjCqD,UAAW/D,EACXgE,QAAS9D,IARuB,mBAM3BM,EAN2B,KAMpBsF,EANoB,OAU8BpF,mBAAS,GAVvC,mBAU3BqF,EAV2B,KAUDC,EAVC,OAWAtF,mBAAS,IAXT,mBAW3BoD,EAX2B,KAWhBI,EAXgB,OAYRxD,mBAAS,GAZD,mBAY3BuF,EAZ2B,KAYpBC,EAZoB,OAaJxF,oBAAS,GAbL,mBAa3BgB,EAb2B,KAalByE,EAbkB,KAc5BtF,EAAU5B,IAMhB6B,qBAAU,WACRsF,EAAqB5F,EAAMuD,UAAWvD,EAAMwD,SAC5CqC,MACC,CAAC7F,IAEJM,qBAAU,WACR,IAAIwF,EAAWC,aAAY,WACzBL,GAAS,SAAAD,GAAK,OAAIA,EAAQ,OACzB,KAQH,OANIvE,GAAqB,KAAVuE,KACbO,cAAcF,GACdJ,EAAS,GACTG,KAGK,kBAAMG,cAAcF,MAC1B,CAACL,EAAOvE,IAEX,IAAM0E,EAAuB,SAACK,EAAWC,GACvC,IAAMC,EAAOC,KAAKC,OAAOH,EAAaD,GAAd,OACxBT,EAA4BW,IAGxBN,EAAY,WAGhB,OAFAF,GAAW,GAEJW,QAAQC,IAAI,CACjBjI,IAASkI,IAAI,cACblI,IAASkI,IAAT,+BAAqCxG,EAAMuD,UAAUkD,cAArD,oBAA8EzG,EAAMwD,QAAQiD,gBAC5FnI,IAASkI,IAAI,eAEZE,MAAK,SAAAC,GACJ,GAAIA,EAAOpG,OAAQ,CACjB,IAAI+C,EAAYqD,EAAO,GAAG1F,KACtBiE,EAAYyB,EAAO,GAAG1F,KACtBkE,EAAWwB,EAAO,GAAG1F,KAAKA,KAE9ByC,EAAaJ,GACb+B,EAAS,2BACJD,GADG,IAENF,YACAC,cAEFQ,GAAW,OAGdiB,OAAM,SAAAC,GACLlB,GAAW,GACXmB,QAAQC,MAAMF,OAYpB,OACE,cAACG,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,cAAC3F,EAAA,EAAD,CAAOhB,UAAWH,EAAQO,MAAOwG,UAAW,EAAGC,QAAM,EAArD,SACE,cAAC5G,EAAA,EAAD,CAAY6G,QAAQ,KAApB,yBAEF,cAAC9F,EAAA,EAAD,CAAOhB,UAAWH,EAAQ8D,UAAWiD,UAAW,EAAGC,QAAM,EAAzD,SACE,eAACE,EAAA,EAAD,CAAMlH,QAAS,CAAE0E,UAAW1E,EAAQ0E,WAAa5E,MAAOiF,EAAMH,SAAUvE,SAxE3D,SAAC8G,EAAO7G,GAC3B0E,EAAS,2BAAKD,GAAN,IAAaH,SAAUtE,MAuEzB,UACE,cAAC8G,EAAA,EAAD,CAAKnI,MAAM,UACX,cAACmI,EAAA,EAAD,CAAKnI,MAAM,gBAIf,eAAC0H,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACO,EAAA,EAAD,CAAQlH,UAAWmH,YAAKtH,EAAQiE,OAAQjE,EAAQqE,YAAarF,MAAM,YAAYiI,QAAQ,YAAvF,gCAGF,cAACN,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG3G,UAAWH,EAAQoE,SAArC,SACE,cAAC3E,EAAD,CAAyBC,cA3Bb,SAAAI,GACpBmF,EAAS,2BACJtF,GADG,IAENuD,UAAWpD,EAAM,GACjBqD,QAASrD,EAAM,OAuB8CH,MAAO,CAACA,EAAMuD,UAAWvD,EAAMwD,SAAUvD,iBAAkBsF,SAItH,uBACA,uBAEA,cAACyB,EAAA,EAAD,CAAMC,WAAS,EAACzG,UAAWH,EAAQmE,oBAAnC,SACE,cAACwC,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAAC1F,EAAA,EAAD,CAAO4F,UAAW,EAAGC,QAAM,EAAC7G,UAAWH,EAAQwE,mBAA/C,SAGI3D,EACI,cAACO,EAAA,EAAD,IACC,qCACD,cAAChB,EAAA,EAAD,CAAY6G,QAAQ,KAApB,6CACA,qBAAK9G,UAAWH,EAAQyE,cAAxB,SACE,iCACGM,EAAMD,SAASyC,oBADlB,IACuC,sCAASxC,EAAMD,SAAS0C,oBAAxB,iBAA2DtC,EAA3D,yBASrD,uBACA,uBAEA,cAACyB,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI3G,UAAWH,EAAQoE,SAAtC,SACE,qBAAKjE,UAAWH,EAAQkE,UAAxB,SACE,cAAClB,EAAD,CAAaC,UAAWA,EAAWtD,MAAOA,EAAOkB,QAASA,UAKhE,uBACA,uBAEA,cAAC8F,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI3G,UAAWH,EAAQoE,SAAtC,SACE,cAACzD,EAAD,CAAgBC,KAAMmE,EAAMF,UAAWhE,QAASA,QAIpD,uBACA","file":"static/js/6.206a385f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create();\n\nexport default instance;","import React, { useEffect, useState } from 'react';\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport dayjs from 'dayjs';\n\nconst useStyles = makeStyles(theme => ({\n  dateRangePicker: {\n    boxShadow: '0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)',\n    width: '347px',\n    marginTop: theme.spacing(1.5),\n    '& > div': {\n      backgroundColor: '#80808012',\n      padding: theme.spacing(1, 3),\n      width: '100%',\n      '& > div': {\n        border: 'none',\n        '& > span': {\n          marginRight: theme.spacing(2)\n        },\n        '& input': {\n          color: '#4d4d4d'\n        },\n        '& span': {\n          color: '#4d4d4d'\n        }\n      }\n    }\n  },\n  label: {\n    backgroundColor: '#80808012',\n    padding: theme.spacing(1.5, 3, 0),\n    fontSize: '12px',\n    color: '#4d4d4d'\n  }\n}));\n\nconst currentDate = new Date();\nconst currentDatePlusOneMonth = dayjs(currentDate).add(1, 'month').toDate();\n\nexport default function DateRangePickerOverride({ onChangeDates, dates = [currentDate, currentDatePlusOneMonth], daysBetweenDates, ...props }) {\n  const [value, setValue] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (dates.length) {\n      setValue(dates);\n    }\n  }, [dates]);\n\n  const onChange = newValue => {\n    setValue(newValue);\n    onChangeDates(newValue);\n  }\n\n  return (\n    <form>\n      <div className={classes.dateRangePicker}>\n        <Typography className={classes.label}>Last {daysBetweenDates || 0} days</Typography>\n        <DateRangePicker\n          onChange={onChange}\n          value={value} />\n      </div>\n    </form>\n  );\n}","import { CircularProgress, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginLeft: theme.spacing(1.75),\n    padding: theme.spacing(2, 1)\n  },\n  spinner: {\n    margin: theme.spacing(3, 3, 0)\n  }\n}));\n\nexport default function DashboardTable({ data, loading = true, ...props }) {\n  const [rows, setRows] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (data) {\n      setRows(data.items);\n    }\n  }, [data]);\n\n  return (\n    <TableContainer component={Paper} className={classes.paper}>\n      {\n        loading\n          ? <CircularProgress className={classes.spinner} />\n          : (\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell><b>Data</b></TableCell>\n                  <TableCell><b>Numar de utilizatori total</b></TableCell>\n                  <TableCell><b>Numar de utilizatori unici</b></TableCell>\n                  <TableCell><b>Other Data</b></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  !loading\n                    ? rows.map((row) => (\n                      <TableRow key={row.id}>\n                        <TableCell>{dayjs(row.date).format('DD/MM/YYYY')}</TableCell>\n                        <TableCell>{row.newUsers}</TableCell>\n                        <TableCell>{row.newUsers}</TableCell>\n                        <TableCell>{row.otherData}</TableCell>\n                      </TableRow>\n                    ))\n                    : null\n                }\n              </TableBody>\n            </Table>\n          )\n      }\n    </TableContainer>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport { Chart, ArgumentAxis, ValueAxis, AreaSeries } from '@devexpress/dx-react-chart-material-ui';\nimport { CircularProgress, makeStyles } from '@material-ui/core';\nimport { ArgumentScale } from '@devexpress/dx-react-chart';\nimport { Paper } from '@material-ui/core';\nimport { scalePoint } from 'd3-scale';\nimport dayjs from 'dayjs';\n\nconst useStyles = makeStyles(theme => ({\n  chart: {\n    padding: theme.spacing(3, 7),\n    '& svg': {\n      '& path': {\n        fill: theme.palette.primary.light\n      },\n      '& text': {\n        fill: '#000'\n      }\n    }\n  },\n  paper: {\n    marginLeft: theme.spacing(1.75)\n  },\n  titleWrapper: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    '& > *': {\n      color: theme.palette.common.black\n    }\n  },\n  spinner: {\n    margin: theme.spacing(3, 4)\n  },\n  firstSpan: {\n    padding: theme.spacing(3, 0, 0, 3),\n    fontWeight: 'bolder',\n    fontSize: '1.25rem'\n  },\n  secondSpan: {\n    padding: theme.spacing(3, 3, 0, 0),\n    fontWeight: 'bolder',\n    fontSize: '1rem'\n  }\n}));\n\nexport default function CustomChart({ chartData: { items = [] }, dates = { startDate: new Date(), endDate: dayjs(new Date()).add(1, 'month').toDate() }, loading, ...props }) {\n  const [data, setChartData] = useState();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (items && !loading) {\n      setChartData(items);\n    }\n  }, [props, items]);\n\n  const ChartRoot = ({ ...props }) => (\n    <Chart.Root {...props} className={classes.chart} />\n  );\n\n  return (\n    <Paper className={classes.paper}>\n      {\n        !loading && data\n          ? (\n            <Chart\n              data={data}\n              rootComponent={ChartRoot}>\n              <ArgumentScale factory={scalePoint} />\n              <ArgumentAxis />\n              <ValueAxis />\n\n              <AreaSeries\n                name=\"Installations\"\n                valueField=\"installations\"\n                argumentField=\"page\" />\n\n              <AreaSeries\n                name=\"Page\"\n                valueField=\"page\"\n                argumentField=\"page\" />\n\n              <div className={classes.titleWrapper}>\n                <span className={classes.firstSpan}>Numar de utilizatori</span>\n                <span className={classes.secondSpan}>{dayjs(dates.startDate).format('DD MMM')} - {dayjs(dates.endDate).format('DD MMM')}</span>\n              </div>\n\n            </Chart>\n          )\n          : <CircularProgress className={classes.spinner} />\n      }\n    </Paper>\n  );\n}","import { Button, CircularProgress, Grid, makeStyles, Paper, Tab, Tabs, Typography } from '@material-ui/core';\nimport DateRangePickerOverride from '../../components/DateRangePicker/DateRangePickerOverride';\nimport DashboardTable from '../../components/DashboardTable/DashboardTable';\nimport CustomChart from '../../components/Chart/CustomChart';\nimport React, { useEffect, useState } from 'react';\nimport instance from '../../utils/axios';\nimport dayjs from 'dayjs';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    background: theme.palette.primary.light,\n    padding: theme.spacing(2, 5),\n    '& h5': {\n      fontWeight: 'bolder'\n    }\n  },\n  tabsPaper: {\n    background: theme.palette.primary.light,\n    paddingLeft: theme.spacing(5),\n    '& button': {\n      color: theme.palette.common.white\n    }\n  },\n  offset: {\n    margin: theme.spacing(4, 0, 0, 5)\n  },\n  fullWidth: {\n    width: '100%'\n  },\n  installationsOffset: {\n    paddingLeft: theme.spacing(1.5)\n  },\n  centered: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  leftButton: {\n    textTransform: 'uppercase',\n    padding: theme.spacing(.75, 4),\n    borderRadius: 0\n  },\n  installationsPaper: {\n    padding: theme.spacing(2, 4),\n    '& h4': {\n      fontWeight: 'bolder'\n    },\n  },\n  installations: {\n    fontSize: '25px',\n    '& > span': {\n      fontSize: '40px',\n      '& span': {\n        color: 'gray',\n        fontSize: '20px'\n      }\n    }\n  },\n  padding: {\n    padding: theme.spacing(3, 0)\n  },\n  indicator: {\n    backgroundColor: '#fff'\n  }\n}));\n\nconst currentDate = new Date();\nconst currentDatePlusOneMonth = dayjs(currentDate).add(1, 'month').toDate();\n\nexport default function Dashboard() {\n  const [state, setState] = useState({\n    tabValue: 0,\n    tableData: [],\n    cardInfo: {}\n  });\n  const [dates, setDates] = useState({\n    startDate: currentDate,\n    endDate: currentDatePlusOneMonth\n  });\n  const [daysBetweenSelectedDates, setDaysBetweenSelectedDates] = useState(0);\n  const [chartData, setChartData] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setState({ ...state, tabValue: newValue });\n  };\n\n  useEffect(() => {\n    calculateDaysBetween(dates.startDate, dates.endDate);\n    fetchData();\n  }, [dates]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n\n    if (loading || timer === 10) {\n      clearInterval(interval);\n      setTimer(0);\n      fetchData();\n    }\n\n    return () => clearInterval(interval);\n  }, [timer, loading]);\n\n  const calculateDaysBetween = (firstDate, secondDate) => {\n    const days = Math.round((secondDate - firstDate) / (1000 * 60 * 60 * 24));\n    setDaysBetweenSelectedDates(days);\n  }\n\n  const fetchData = () => {\n    setLoading(true);\n\n    return Promise.all([\n      instance.get('/api/chart'),\n      instance.get(`/api/table?startdate=${dates.startDate.toISOString()}&enddate=${dates.endDate.toISOString()}`),\n      instance.get('/api/card')\n    ])\n      .then(result => {\n        if (result.length) {\n          let chartData = result[0].data;\n          let tableData = result[1].data;\n          let cardInfo = result[2].data.data;\n\n          setChartData(chartData);\n          setState({\n            ...state,\n            tableData,\n            cardInfo\n          });\n          setLoading(false);\n        }\n      })\n      .catch(err => {\n        setLoading(false);\n        console.error(err);\n      });\n  }\n\n  const onChangeDates = value => {\n    setDates({\n      ...dates,\n      startDate: value[0],\n      endDate: value[1]\n    });\n  }\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Paper className={classes.paper} elevation={0} square>\n          <Typography variant=\"h5\">Dashboard</Typography>\n        </Paper>\n        <Paper className={classes.tabsPaper} elevation={3} square>\n          <Tabs classes={{ indicator: classes.indicator }} value={state.tabValue} onChange={handleChange}>\n            <Tab label=\"Chart\" />\n            <Tab label=\"Report\" />\n          </Tabs>\n        </Paper>\n\n        <Grid container>\n          <Grid item xs={6}>\n            <Button className={clsx(classes.offset, classes.leftButton)} color=\"secondary\" variant=\"contained\">Configura Raport</Button>\n          </Grid>\n\n          <Grid item xs={6} className={classes.centered}>\n            <DateRangePickerOverride onChangeDates={onChangeDates} dates={[dates.startDate, dates.endDate]} daysBetweenDates={daysBetweenSelectedDates} />\n          </Grid>\n        </Grid>\n\n        <br />\n        <br />\n\n        <Grid container className={classes.installationsOffset}>\n          <Grid item>\n            <Paper elevation={4} square className={classes.installationsPaper}>\n\n              {\n                loading\n                  ? <CircularProgress />\n                  : (<>\n                    <Typography variant=\"h4\">Instalari pe dispozitive active</Typography>\n                    <div className={classes.installations}>\n                      <span>\n                        {state.cardInfo.monthlyInstallation} <span>+ {state.cardInfo.prevMonthComparison}% vs previous {daysBetweenSelectedDates} days</span>\n                      </span>\n                    </div>\n                  </>)\n              }\n            </Paper>\n          </Grid>\n        </Grid>\n\n        <br />\n        <br />\n\n        <Grid container>\n          <Grid item xs={11} className={classes.centered}>\n            <div className={classes.fullWidth}>\n              <CustomChart chartData={chartData} dates={dates} loading={loading} />\n            </div>\n          </Grid>\n        </Grid>\n\n        <br />\n        <br />\n\n        <Grid container>\n          <Grid item xs={11} className={classes.centered}>\n            <DashboardTable data={state.tableData} loading={loading} />\n          </Grid>\n        </Grid>\n\n        <br />\n        <br />\n\n      </Grid>\n    </Grid >\n  );\n}"],"sourceRoot":""}